# Generated by Django 2.2.1 on 2019-05-20 13:10

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormatTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Format tag',
                'verbose_name_plural': 'Format tags',
            },
        ),
        migrations.CreateModel(
            name='GenericTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Generic tag',
                'verbose_name_plural': 'Generic tags',
            },
        ),
        migrations.CreateModel(
            name='InfoPush',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('desc', models.TextField(blank=True, null=True)),
                ('cta_text', models.CharField(max_length=512)),
                ('cta_url', models.URLField()),
                ('visible', models.BooleanField(default=False)),
                ('image', models.FileField(upload_to='images/infopush/')),
            ],
        ),
        migrations.CreateModel(
            name='LanguageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Language tag',
                'verbose_name_plural': 'Language tags',
            },
        ),
        migrations.CreateModel(
            name='TaggedGenericItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='djnd_taggedgenericitem_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='djnd_taggedgenericitem_items', to='djnd.GenericTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Type tag',
                'verbose_name_plural': 'Type tags',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('desc', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('image', models.FileField(upload_to='images/video/')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='djnd.TaggedGenericItem', to='djnd.GenericTag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TaggedTypeItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='djnd_taggedtypeitem_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='djnd_taggedtypeitem_items', to='djnd.TypeTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedLanguageItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='djnd_taggedlanguageitem_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='djnd_taggedlanguageitem_items', to='djnd.LanguageTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedFormatItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='djnd_taggedformatitem_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='djnd_taggedformatitem_items', to='djnd.FormatTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('desc', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('url', models.URLField(blank=True, null=True)),
                ('image', models.FileField(upload_to='images/project/')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='djnd.TaggedGenericItem', to='djnd.GenericTag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Clip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('desc', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('publisher', models.CharField(max_length=512)),
                ('image', models.FileField(upload_to='images/clip/')),
                ('formats', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='djnd.TaggedFormatItem', to='djnd.FormatTag', verbose_name='Tags')),
                ('languages', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='djnd.TaggedLanguageItem', to='djnd.LanguageTag', verbose_name='Tags')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='djnd.TaggedGenericItem', to='djnd.GenericTag', verbose_name='Tags')),
                ('types', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='djnd.TaggedTypeItem', to='djnd.TypeTag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
